name: Build and Release on macOS

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v3

    - name: Create temporary keychain
      run: |
        security create-keychain -p "temp-keychain-password" temp.keychain
        security default-keychain -s temp.keychain
        security unlock-keychain -p "temp-keychain-password" temp.keychain
        security set-keychain-settings -t 3600 -l temp.keychain

    - name: Import certificate to temporary keychain
      run: |
        echo "${{ secrets.CERTIFICATE_BASE64 }}" | base64 --decode > thirdai.p12
        security import thirdai.p12 -k ~/Library/Keychains/temp.keychain -P ${{ secrets.CERTIFICATE_PASSWORD }} -T "/usr/bin/codesign"
        security set-key-partition-list -S apple-tool:,apple: -s -k "temp-keychain-password" temp.keychain

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Specify Node.js version

    - name: Install Frontend Dependencies
      run: |
        cd frontend/pocketllm
        npm install

    - name: Package the Frontend
      run: |
        cd frontend/pocketllm
        npm run build
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Debug - List files in dist directory
      run: ls -al ./frontend/pocketllm/dist
      shell: bash

    - name: Find the ZIP file for notarization
      run: |
        FILE=$(find frontend/pocketllm/dist -name 'PocketLLM-*-mac.zip' | head -n 1 | sed 's|^\./||')
        echo "Found file: $FILE"
        echo "FILE_PATH=$FILE" >> $GITHUB_ENV
      shell: bash

    - name: Notarize and Staple
      run: |
        xcrun notarytool submit ${{ env.FILE_PATH }} --keychain-profile "AC_PASSWORD" --wait
      env:
        AC_PASSWORD: ${{ secrets.AC_PASSWORD }}

    - name: Prepare Artifacts for Upload
      run: |
        mkdir -p artifacts_for_upload
        find frontend/pocketllm/dist -name 'PocketLLM-*-mac.zip' -exec cp {} artifacts_for_upload/ \;
        find frontend/pocketllm/dist -name 'PocketLLM-*.dmg' -exec cp {} artifacts_for_upload/ \;
        find frontend/pocketllm/dist -name 'latest-mac.yml' -exec cp {} artifacts_for_upload/ \;
      shell: bash

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: macOS-app
        path: artifacts_for_upload/
