name: Build and Release on macOS

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11' # Specify Python version as v3.11

    - name: Install Backend Dependencies
      run: pip install -r backend/requirements.txt

    # Assuming modifications to main_git_action.spec are done before pushing to VCS.
    # If automated edits are needed, add steps here to modify main_git_action.spec as required.
    - name: Get Langchain Path
      run: echo "LANGCHAIN_PATH=$(pip show langchain | grep Location | cut -d' ' -f2)/langchain" >> $GITHUB_ENV

    - name: Get Trafilatura Path
      run: echo "TRAFILATURA_PATH=$(pip show trafilatura | grep Location | cut -d' ' -f2)/trafilatura" >> $GITHUB_ENV

    - name: Get NLTK Stopwords Path
      run: |
        echo "NLTK_STOPWORDS_PATH=$(python -c 'import nltk; print(nltk.data.find(\"corpora/stopwords\"))')" >> $GITHUB_ENV

    - name: Update main_git_action.spec Paths
      run: |
        sed -i '' "s|LANGCHAIN_PATH|${{ env.LANGCHAIN_PATH }}|g" backend/main_git_action.spec
        sed -i '' "s|TRAFILATURA_PATH|${{ env.TRAFILATURA_PATH }}|g" backend/main_git_action.spec
        sed -i '' "s|NLTK_STOPWORDS_PATH|${{ env.NLTK_STOPWORDS_PATH }}|g" backend/main_git_action.spec

    
    - name: Compile the Backend
      run: |
        cd backend
        pyinstaller main_git_action.spec
    
    - name: Copy Backend to Frontend
      run: cp -R dist/main frontend/pocketllm

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Specify Node.js version

    - name: Install Frontend Dependencies
      run: |
        cd frontend/pocketllm
        npm install

    - name: Hide Frontend Debug Console
      run: |
        cd frontend/pocketllm/electron
        sed -i '' 's/\/\/ Menu.setApplicationMenu(Menu.buildFromTemplate([]));/Menu.setApplicationMenu(Menu.buildFromTemplate([]));/' main.ts

    - name: Sign Python Binaries
      run: |
        cd path/to/dist/main
        chmod +x sign_all.sh
        ./sign_all.sh
      env:
        AC_PASSWORD: ${{ secrets.AC_PASSWORD }}

    - name: Package the Frontend
      run: |
        cd frontend/pocketllm
        npm run build

    - name: Notarize and Staple
      run: |
        cd path/to/frontend/pocketllm/dist
        xcrun notarytool submit pocketllm.zip --keychain-profile "AC_PASSWORD" --wait
        xcrun stapler staple pocketllm.app
      env:
        AC_PASSWORD: ${{ secrets.AC_PASSWORD }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: macOS-app
        path: frontend/pocketllm/dist/pocketllm.app
